name: Build Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+'

permissions:
  contents: write
  packages: write

env:
  VERSION: unset
  ARCHIVE: 

jobs:
  release-matrics:
    name: Release binary
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, freebsd, windows, darwin]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: 'stable'
    - run: go version

    - name: Set version
      run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

    - name: Build unix binary
      if: matrix.goos != 'windows'
      run: go build -a -trimpath -o tdu -ldflags "-X main.gitTag=${{ env.VERSION }}" .

    - name: Build windows binary
      if: matrix.goos == 'windows'
      run: go build -a -trimpath -o tdu.exe -ldflags "-X main.gitTag=${{ env.VERSION }}" .

    - name: Create unix tarball
      if: matrix.goos != 'windows'
      run: |
        ARCHIVE="tdu-${{ matrix.goos }}-${{ matrix.goarch }}-v${{ env.VERSION }}.tar.gz"
        tar -czf ${ARCHIVE} tdu
        echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

    - name: Create windows zip
      if: matrix.goos == 'windows'
      run: |
        ARCHIVE="tdu-${{ matrix.goos }}-${{ matrix.goarch }}-v${{ env.VERSION }}.zip"
        zip ${ARCHIVE} tdu.exe
        echo "ARCHIVE=$ARCHIVE" >> $GITHUB_ENV

    - name: Release binary
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ARCHIVE }}
        token: ${{ secrets.GITHUB_TOKEN }}
        release_name: v${{ env.VERSION }}
        body: |
          Release of version ${{ env.VERSION }}
        draft: false
        prerelease: true
